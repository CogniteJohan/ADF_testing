{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-testing-johan"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoadMainOrAllFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Files",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Files",
							"value": [
								"colors",
								"inventories",
								"inventory_parts",
								"part_categories",
								"parts",
								"sets",
								"themes"
							]
						}
					},
					{
						"name": "If Load All Files",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.LoadAllFiles",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Append Inventory Sets",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": "inventory_sets"
									}
								},
								{
									"name": "Append Part Relationships",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": "part_relationships"
									}
								}
							]
						}
					},
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "If Load All Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Files')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lego_HTTP_to_ADSL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lego_HTTP_to_ADSL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"LoadAllFiles": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"variables": {
					"Files": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadMainOrAllFiles_lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Active Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Active Files').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lego_HTTP_to_ADSL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lego_HTTP_to_ADSL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": {
												"value": "@item().SourceFileName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup Configuration File",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "lookup",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter Active Files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup Configuration File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Configuration File').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsActive, '1')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"LoadAllFiles": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"variables": {
					"Files": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orchestration_Lego')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lego_ADSL_to_ASQL_Themes",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lego_HTTP_to_ADSL_Themes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Lego_ADSL_to_ASQL_Themes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Lego_HTTP_to_ADSL_Themes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Lego_HTTP_to_ADSL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-08-04T12:33:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orchestration_Lego_Themes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lego_ADSL_to_ASQL_Themes",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lego_HTTP_to_ADSL_Themes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Lego_ADSL_to_ASQL_Themes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Lego_HTTP_to_ADSL_Themes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Lego_HTTP_to_ADSL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "Themes Only"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-04T12:33:26Z"
			},
			"dependsOn": []
		}
	]
}